{
    "swagger": "2.0",
    "info": {
        "description": "A thing server",
        "title": "api.ldej.nl",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "Laurence de Jong",
            "url": "https://ldej.nl/",
            "email": "support@ldej.nl"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0"
    },
    "paths": {
        "/thing": {
            "get": {
                "description": "List things",
                "tags": [
                    "Thing"
                ],
                "summary": "List things",
                "operationId": "list-things",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Limit (max 100)",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/app.ThingsResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httpx.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/thing/new": {
            "post": {
                "description": "Create a thing",
                "tags": [
                    "Thing"
                ],
                "summary": "Create a thing",
                "operationId": "create-thing",
                "parameters": [
                    {
                        "description": "The body to create a thing",
                        "name": "Body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/app.CreateThing"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/app.ThingResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/httpx.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/httpx.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/thing/{uuid}": {
            "get": {
                "description": "get thing by uuid",
                "tags": [
                    "Thing"
                ],
                "summary": "Get a thing",
                "operationId": "get-thing-by-uuid",
                "parameters": [
                    {
                        "type": "string",
                        "description": "UUID",
                        "name": "uuid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/app.ThingResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/httpx.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/httpx.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Update a thing",
                "tags": [
                    "Thing"
                ],
                "summary": "Update a thing",
                "operationId": "update-thing",
                "parameters": [
                    {
                        "type": "string",
                        "description": "UUID",
                        "name": "uuid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "The body to update a thing",
                        "name": "Body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/app.UpdateThing"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/app.ThingResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/httpx.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/httpx.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a thing",
                "tags": [
                    "Thing"
                ],
                "summary": "Delete a thing",
                "operationId": "delete-thing",
                "parameters": [
                    {
                        "type": "string",
                        "description": "UUID",
                        "name": "uuid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Empty response"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httpx.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "app.CreateThing": {
            "type": "object",
            "required": [
                "name",
                "value"
            ],
            "properties": {
                "name": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "app.ThingResponse": {
            "type": "object",
            "properties": {
                "created": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "updated": {
                    "type": "string"
                },
                "uuid": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "app.ThingsResponse": {
            "type": "object",
            "properties": {
                "limit": {
                    "type": "integer"
                },
                "page": {
                    "type": "integer"
                },
                "things": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/app.ThingResponse"
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "app.UpdateThing": {
            "type": "object",
            "required": [
                "value"
            ],
            "properties": {
                "value": {
                    "type": "string"
                }
            }
        },
        "httpx.ErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                }
            }
        }
    }
}